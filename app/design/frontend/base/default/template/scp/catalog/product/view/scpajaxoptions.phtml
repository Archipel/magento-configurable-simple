<?php
//SCP: This is part of the Custom Option AJAX response - it shows custom options for 'associated' products.

//opConfig is forced into global scope even if pulled in via ajax (by using window.)
//and also ensure correct form encoding
/* @var $this ShirtWorld_ShirtDesigner_Block_Catalog_Product_View_Options */

$product = $this->getProduct();
$parent = null;
if($product->getTypeID() == 'simple'){
	$parentIds = Mage::getResourceSingleton('catalog/product_type_configurable')->getParentIdsByChild($product->getId());
	if(count($parentIds)){
		$parent = Mage::getModel('catalog/product')->load($parentIds[0]);
	}
}

$_finalPrice = $product->getFinalPrice();
if ($product->getTypeId() == Mage_Catalog_Model_Product_Type::TYPE_BUNDLE) {
	$_priceInclTax = Mage::helper('tax')->getPrice($product, $_finalPrice, true,
			null, null, null, null, null, false);
	$_priceExclTax = Mage::helper('tax')->getPrice($product, $_finalPrice, false,
			null, null, null, null, null, false);
} else {
	$_priceInclTax = Mage::helper('tax')->getPrice($product, $_finalPrice, true);
	$_priceExclTax = Mage::helper('tax')->getPrice($product, $_finalPrice);
}

$_tierPricesQty = array();
$_tierPrices = array();
$_tierPricesInclTax = array();
$_tierPricesDeliveryTime = array();
foreach ($product->getTierPrice() as $tierPrice) {
	$_tierPrices[] = Mage::helper('core')->currency(
			Mage::helper('tax')->getPrice($product, (float)$tierPrice['website_price'], false) - $_priceExclTax
			, false, false);
	$_tierPricesInclTax[] = Mage::helper('core')->currency(
			Mage::helper('tax')->getPrice($product, (float)$tierPrice['website_price'], true) - $_priceInclTax
			, false, false);
	$_tierPricesQty[] = $tierPrice['price_qty'];
	$_tierPricesDeliveryTime[] = $tierPrice['delivery_time'];
}

?>
<script type="text/javascript">
    //<![CDATA[
    try{
        window.opConfig = new Product.Options(<?php echo $this->getJsonConfig() ?>);

		var curqty = jQuery("#qty").val();
		if(curqty < <?php echo floatval($product->getStockItem()->getMinSaleQty()); ?>){
			jQuery("#qty").val(<?php echo floatval($product->getStockItem()->getMinSaleQty()); ?>);
		}
		jQuery("#qty").attr('min', <?php echo floatval($product->getStockItem()->getMinSaleQty()); ?>);	
        <?php 

        $_sizesModel = Mage::getModel('www_productsizes/product_size');
        if($_sizesModel && !$parent->getProductSizesToAttriboption()){
        	$_sizes = $_sizesModel->getCollectionForProduct($parent ? $parent : $product);
        }
        else{
        	$_sizes = array();
        }
        foreach($_sizes as $s){ 
        	/* @var $s WeynWebWorks_ProductSizes_Model_Product_Size */
        	$prices = $s->getPrices($product);
        	$margins = $s->getProductMargins($product);
        		
		?>
        	productSizeConfig[<?php echo $s->getId(); ?>].price = {
        		"fixed" : <?php echo floatval($prices["price_fixed"]); ?>,
        		"fixedType" : "<?php echo $prices["price_fixed_type"]; ?>",
        		<?php if($s->getNDims() >= 1){ ?>
        		"circumference" : <?php echo floatval($prices["price_circumference"]); ?>,
        		"circumferenceType" : "<?php echo $prices["price_circumference_type"]; ?>",
        		<?php if($s->getNDims() >= 2){ ?>
        		"surface" : <?php echo floatval($prices["price_surface"]); ?>,
        		"surfaceType" : "<?php echo $prices["price_surface_type"]; ?>",
        		<?php if($s->getNDims() >= 3){ ?>
        		"volume" : <?php echo floatval($prices["price_volume"]); ?>,
        		"volumeType" : "<?php $prices["price_volume_type"]; ?>"
        		<?php }}} ?>
        	};
    		<?php if($s->getNDims() >= 1){?>
    			productSizeConfig[<?php echo $s->getId(); ?>].margins.width = <?php echo (($margins && $margins->getWidthmarge() !== null) ? $margins->getWidthmarge() : $s->getWidthmarge()); ?>;
    	    <?php } if($s->getNDims() >= 2){ ?>
		    	productSizeConfig[<?php echo $s->getId(); ?>].margins.height = <?php echo (($margins && $margins->getHeightmarge() !== null) ? $margins->getHeightmarge() : $s->getHeightmarge()); ?>;   
    	    <?php } if($s->getNDims() >= 3){ ?>
		    	productSizeConfig[<?php echo $s->getId(); ?>].margins.depth = <?php echo (($margins && $margins->getDepthmarge() !== null) ? $margins->getDepthmarge() : $s->getDepthmarge()); ?>;
        	<?php } ?>
        <?php };?>
        
        optionsPrice.tierPrices = <?php echo json_encode($_tierPrices); ?>;
        optionsPrice.tierPricesInclTax = <?php echo json_encode($_tierPricesInclTax); ?>;
        optionsPrice.tierPricesQty = <?php echo json_encode($_tierPricesQty); ?>;
        optionsPrice.tierPricesDeliveryTime = <?php echo json_encode($_tierPricesDeliveryTime); ?>;
        optionsPrice.onlyTierQtys = <?php echo ($product->getOnlyTierQtys() ? 'true' : 'false'); ?>;
        qtyInputOrDiv();
        scpWewewoPriceReload();
	}catch(e){
		console.log(e);
	}
    
    $('product_addtocart_form').encoding = 'multipart/form-data';
    //]]>
</script>
<?php if (count($this->getOptions())): ?>
<dl>
<?php $_options = Mage::helper('core')->decorateArray($this->getOptions()) ?>
<?php foreach($_options as $_option): ?>
    <?php echo $this->getOptionHtml($_option) ?>
<?php endforeach; ?>
</dl>

<script type="text/javascript">
    $$('#product-options-wrapper dl').each(function(label) {
        label.removeClassName('last');
    });
    $$('#SCPcustomOptionsDiv dl').each(function(label) {
        label.addClassName('last');
    });
</script>
<?php endif; ?>
